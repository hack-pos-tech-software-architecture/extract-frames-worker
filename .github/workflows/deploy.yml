name: Deploy Lambda Function

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR repository if it doesn't exist
        run: |
          aws ecr describe-repositories \
          --repository-names function-extract-frames-worker || aws ecr create-repository \
          --repository-name function-extract-frames-worker

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: function-extract-frames-worker
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      # - name: Upload Lambda Package to S3
      #   run: |
      #     aws s3 cp lambda_function.zip s3://lambdas-package-s3/lambda_function_ExtractFramesWorker.zip

      # - name: Deploy to AWS Lambda
      #   run: |
      #     aws lambda update-function-code \
      #       --function-name functionExtractFramesWorker \
      #       --s3-bucket lambdas-package-s3 \
      #       --s3-key lambda_function_ExtractFramesWorker.zip
